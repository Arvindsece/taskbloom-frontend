{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[token,setToken]=useState(null);useEffect(()=>{const storedToken=localStorage.getItem('token');if(storedToken){setToken(storedToken);setIsAuthenticated(true);}},[]);const login=newToken=>{localStorage.setItem('token',newToken);setToken(newToken);setIsAuthenticated(true);};const logout=()=>{localStorage.removeItem('token');setToken(null);setIsAuthenticated(false);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,token,login,logout},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","token","setToken","storedToken","localStorage","getItem","login","newToken","setItem","logout","removeItem","Provider","value","useAuth"],"sources":["C:/Users/Arvind/TASK BLOOM/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [token, setToken] = useState(null);\n\n    useEffect(() => {\n        const storedToken = localStorage.getItem('token');\n        if (storedToken) {\n            setToken(storedToken);\n            setIsAuthenticated(true);\n        }\n    }, []);\n\n    const login = (newToken) => {\n        localStorage.setItem('token', newToken);\n        setToken(newToken);\n        setIsAuthenticated(true);\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setToken(null);\n        setIsAuthenticated(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, token, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAExCE,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAW,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACjD,GAAIF,WAAW,CAAE,CACbD,QAAQ,CAACC,WAAW,CAAC,CACrBH,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,KAAK,CAAIC,QAAQ,EAAK,CACxBH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAC,CACvCL,QAAQ,CAACK,QAAQ,CAAC,CAClBP,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAS,MAAM,CAAGA,CAAA,GAAM,CACjBL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAChCR,QAAQ,CAAC,IAAI,CAAC,CACdF,kBAAkB,CAAC,KAAK,CAAC,CAC7B,CAAC,CAED,mBACIN,IAAA,CAACC,WAAW,CAACgB,QAAQ,EAACC,KAAK,CAAE,CAAEb,eAAe,CAAEE,KAAK,CAAEK,KAAK,CAAEG,MAAO,CAAE,CAAAX,QAAA,CAClEA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,MAAO,MAAM,CAAAe,OAAO,CAAGA,CAAA,GAAMtB,UAAU,CAACI,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}