{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arvind\\\\TODO LIST\\\\frontend\\\\src\\\\Create.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Create = () => {\n  _s();\n  const [task, setTask] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const {\n    token\n  } = useAuth();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!task.trim() || !dueDate) {\n      alert('Please enter both task and due date');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/add', {\n        task: task.trim(),\n        dueDate: new Date(dueDate).toISOString()\n      }, {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      window.location.reload();\n      setTask('');\n      setDueDate('');\n    } catch (err) {\n      console.error('Error creating task:', err);\n      alert('Failed to create task. Please try again.');\n    }\n  };\n\n  // Get today's date in YYYY-MM-DD format for min attribute\n  const today = new Date().toISOString().split('T')[0];\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TaskBloom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a task\",\n          value: task,\n          onChange: e => setTask(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: dueDate,\n          min: today,\n          onChange: e => setDueDate(e.target.value),\n          className: \"date-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Create, \"iRrzART07xv0jZGJpQ74O0WfxtU=\", false, function () {\n  return [useAuth];\n});\n_c = Create;\nexport default Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","axios","useAuth","jsxDEV","_jsxDEV","Create","_s","task","setTask","dueDate","setDueDate","token","handleSubmit","e","preventDefault","trim","alert","post","Date","toISOString","headers","window","location","reload","err","console","error","today","split","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","value","onChange","target","required","min","_c","$RefreshReg$"],"sources":["C:/Users/Arvind/TODO LIST/frontend/src/Create.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './AuthContext';\nimport './App.css';\n\nconst Create = () => {\n    const [task, setTask] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const { token } = useAuth();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!task.trim() || !dueDate) {\n            alert('Please enter both task and due date');\n            return;\n        }\n        \n        try {\n            await axios.post('http://localhost:5000/add', \n                { \n                    task: task.trim(),\n                    dueDate: new Date(dueDate).toISOString()\n                },\n                { headers: { 'x-auth-token': token } }\n            );\n            \n            window.location.reload();\n            setTask('');\n            setDueDate('');\n        } catch (err) {\n            console.error('Error creating task:', err);\n            alert('Failed to create task. Please try again.');\n        }\n    };\n\n    // Get today's date in YYYY-MM-DD format for min attribute\n    const today = new Date().toISOString().split('T')[0];\n\n    return (\n        <main>\n            <h1>TaskBloom</h1>\n            <div className='create-form'>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type='text'\n                        placeholder='Enter a task'\n                        value={task}\n                        onChange={(e) => setTask(e.target.value)}\n                        required\n                    />\n                    <input\n                        type='date'\n                        value={dueDate}\n                        min={today}\n                        onChange={(e) => setDueDate(e.target.value)}\n                        className='date-input'\n                        required\n                    />\n                    <button type='submit'>Add Task</button>\n                </form>\n            </div>\n        </main>\n    );\n};\n\nexport default Create;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}